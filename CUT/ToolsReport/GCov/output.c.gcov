        -:    0:Source:src/output.c
        -:    0:Graph:output.gcno
        -:    0:Data:output.gcda
        -:    0:Runs:1
        -:    0:Source is newer than graph
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:
        -:    4:
        -:    5:#include "../header/header.h"
        -:    6:
        -:    7://Function to print
        1:    8:void print_output(skw *temp) {
        5:    9:    while (temp != NULL) {
        4:   10:        printf("\n%s", temp->key);
        -:   11:        int i;
        8:   12:        for (i = 0; i < temp->index; ++i) {
        4:   13:            printf("\n%s", temp->projectIds[i]);
        4:   14:            printf("\n%s", temp->projectTitle[i]);
        -:   15:        }
        -:   16:
        4:   17:        printf("\n\n");
        4:   18:        temp = temp->next;
        -:   19:    }
        1:   20:}
        -:   21:
        -:   22:
        -:   23://Function to write output to the file
        1:   24:int write_output(skw *temp) {
        -:   25:    FILE *fptr;
        1:   26:    fptr = fopen("data/keywordProject.txt", "w");
        1:   27:    if (!fptr) {
    #####:   28:        printf("\nerror");
    #####:   29:        return EXIT_FAILURE;
        -:   30:    }
        -:   31:
        5:   32:    while (temp != NULL) {
        4:   33:        fprintf(fptr, "Key-%s", temp->key);
        -:   34:        int i;
        8:   35:        for (i = 0; i < temp->index; ++i) {
        4:   36:            fprintf(fptr, "\n%s", temp->projectIds[i]);
        4:   37:            fprintf(fptr, "\n%s", temp->projectTitle[i]);
        -:   38:        }
        -:   39:
        4:   40:        fprintf(fptr, "\n\n\n");
        -:   41:
        4:   42:        temp = temp->next;
        -:   43:    }
        -:   44:
        1:   45:    (void)fclose(fptr);
        1:   46:    return EXIT_SUCCESS;
        -:   47:}
